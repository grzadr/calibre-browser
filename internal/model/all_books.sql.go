// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: all_books.sql

package model

import (
	"context"
	"time"
)

const listAllBooks = `-- name: ListAllBooks :many
SELECT
    id,
    title,
    author_sort AS authors,
    timestamp AS added_at,
    last_modified AS modified_at,
    path
FROM books
`

type ListAllBooksRow struct {
	ID         int64
	Title      string
	Authors    string
	AddedAt    time.Time
	ModifiedAt time.Time
	Path       string
}

func (q *Queries) ListAllBooks(ctx context.Context) ([]ListAllBooksRow, error) {
	rows, err := q.db.QueryContext(ctx, listAllBooks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListAllBooksRow
	for rows.Next() {
		var i ListAllBooksRow
		if err := rows.Scan(
			&i.ID,
			&i.Title,
			&i.Authors,
			&i.AddedAt,
			&i.ModifiedAt,
			&i.Path,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
